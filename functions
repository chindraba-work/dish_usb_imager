#!/usr/bin/env bash

# SPDX-License-Identifier: MIT

# Copyright 2023 Chindraba (Ronald Lamoreaux) <DishUSBImager@chindraba.work>

# Helper functions for DishUSBImager script

usage() {
    _messageOut "${usage_text}" >&2
}

findArchiveDir() {
    if [[ -n "$archive_dir" ]]
    then
        if [[ -d "$( pwd )/${archive_dir}" ]]
        then
            archive_dir="$( pwd )/${archive_dir}"
        elif [[ -d "${script_dir}/${archive_dir}" ]]
        then
            archive_dir="${script_dir}/${archive_dir}"
        elif [[ ! -d "$archive_dir" ]]
        then
            _messageOut "$archive_dir_not_found" >&2
            archive_dir=''
            archive_dir="$( findArchiveDir )"
        fi
    elif [[ -d '/var/opt/DishUSBImager/' ]]
    then
        archive_dir='/var/opt/DishUSBImager'
    elif [[ -d "${script_dir}/archives" ]]
    then
        archive_dir="${script_dir}/archives"
    else
        _messageOut "$making_archive_dir" >&2
        mkdir -p '/var/opt/DishUSBImager/archives' 2>/dev/null
        archive_dir='/var/opt/DishUSBImager/archives'
    fi
    echo "$archive_dir"
}

if [[ -e '/etc/opt/DishUSBImagerrc' ]]
then
    source '/etc/opt/DishUSBImagerrc'
elif [[ -e "${script_dir}/DishUSBImagerrc" ]]
then
    source "${script_dir}/DishUSBImagerrc"
else
    _messageOut "${no_conf_text}" >&2
    archive_repo='https://dns.dish.com/img_repo'
    archive_handle='STBImage'
    archive_type='zip'
    archive_dir=''
fi

archive_path="$( findArchiveDir )/${archive_handle:=STBImage}.${archive_type:=zip}"
archive_dir="$(dirname "$archive_path")"
if [[ ! -d "${archive_dir}" ]]
then
    _messageOut "${missing_archive_dir}" >&2
    exit 1
fi
archive_url="${archive_repo:=https://dns.dish.com/img_repo}/${archive_handle}.${archive_type}"


# vim: syntax=bash ts=4 sw=4 sts=4 et sr
